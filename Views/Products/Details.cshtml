@using AppleStore.Repositories
@model AppleStore.Models.Entities.Product

@{
    ViewData["Title"] = Model.Name;
    @* var productVariant = (ProductVariant)ViewData["productVariant"]!;
var storages = (List<VariantsAttributes>?)ViewData["detailsStorageList"]; *@
    var colors = (List<VariantsAttributes>?)ViewData["detailsColorList"];
}

<!-- Start Item Details -->
<section class="item-details section pt-3">
    <div class="container">
        <div class="top-area d-flex">
            <div class="row align-items-center">
                <div class="col-lg-5 col-md-12 col-12">
                    <div class="product-images">
                        <main id="gallery">
                            <div class="main-img">
                                <img src="~/images/products/@Model.Avatar" id="current" alt="@Model.Name">
                            </div>
                            <div class="images">
                                @if (Model.ProductImages != null)
                                {
                                    @foreach (var item in Model.ProductImages)
                                    {
                                        <img src="~/images/product-details/@item.ImageUrl" class="img" alt="#">
                                    }
                                }
                            </div>
                        </main>
                    </div>
                </div>
                <div class="col-lg-7 col-md-12 col-12 h-100">
                    <div class="product-info mt-5 px-3">
                        <h2 class="title">@Model.Name</h2>
                        <p class="category mb-2">
                            <i class="lni lni-tag"></i> Category:<a href="javascript:void(0)">
                                @Model.Category?.Name
                            </a>
                        </p>
                        @{
                            var variant = Model.ProductVariants;
                            if (variant.Count == 1 && variant.FirstOrDefault().VariantsAttributes.Count == 0)
                            {
                                if (variant.FirstOrDefault().Price > 1)
                                {
                                    <div class='category text-success'>
                                        <i class='lni lni-thumbs-up'></i> Còn hàng
                                    </div>
                                }
                                else
                                {
                                    <div class='category text-danger'>
                                        <i class='lni lni-thumbs-down'></i> Hết hàng
                                    </div>
                                }
                                <h4 class="price">
                                    @Model.ProductVariants.FirstOrDefault().Price.ToString("#,##0")đ
                                </h4>
                            }
                            else
                            {
                                <div id="qtyStatus"></div>
                                <div id="productPrice"></div>
                            }
                        }
                        <div id="colors" class="form-group color-option">
                            @if (colors != null && colors.Count() > 0)
                            {
                                <label class="title-label">Màu sắc</label>
                                var firstColor = colors.First();
                                @foreach (var color in colors)
                                {
                                    if (color == null) continue;
                                    var check = color.ProductVariant?.VariantsAttributes!.FirstOrDefault(f =>
                                    f.ProductAttributeValueId == firstColor.ProductAttributeValueId) != null ? "checked" : "";
                                    <div class="form-check color-item m-0 p-0 me-1 form-check-inline">
                                        <input type="radio" class="select-color" name="color-options"
                                            style="color: @(color.ProductAttributeValue?.Value);"
                                            value="@color.ProductAttributeValueId" @(check) />
                                    </div>
                                }
                            }
                        </div>
                        <div id="storages" class="form-group color-option"></div>
                        <div class="bottom-content">
                            <div class="row align-items-end">
                                <div class="col-lg-7 col-md-7 col-12">
                                    <div class="button cart-button">
                                        <button class="btn addToCartBtn" style="width: 100%;">Mua ngay</button>
                                        <input type="hidden" id="p_color" value="">
                                        <input type="hidden" id="p_storage" value="">
                                    </div>
                                </div>
                                <div class="col-lg-5 col-md-5 col-12 p-0">
                                    <div class="wish-button">
                                        <button class="btn"><i class="lni lni-heart"></i> Yêu thích</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="product-details-info">
            <div class="single-block" id="productDescription"></div>
        </div>
    </div>
</section>
<!-- End Item Details -->
<!-- Review Modal -->
<div class="modal fade review-modal" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Leave a Review</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="review-name">Your Name</label>
                            <input class="form-control" type="text" id="review-name" required>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="review-email">Your Email</label>
                            <input class="form-control" type="email" id="review-email" required>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="review-subject">Subject</label>
                            <input class="form-control" type="text" id="review-subject" required>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label for="review-rating">Rating</label>
                            <select class="form-control" id="review-rating">
                                <option>5 Stars</option>
                                <option>4 Stars</option>
                                <option>3 Stars</option>
                                <option>2 Stars</option>
                                <option>1 Star</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label for="review-message">Review</label>
                    <textarea class="form-control" id="review-message" rows="8" required></textarea>
                </div>
            </div>
            <div class="modal-footer button">
                <button type="button" class="btn">Submit Review</button>
            </div>
        </div>
    </div>
</div>
<!-- End Review Modal -->

@section Scripts {
    @if (@colors != null && @colors.Count > 0)
    {
        <script>
            firstLoading(@Model.Id, @colors[0]?.ProductAttributeValue?.Id);
            function firstLoading(productId, _colorId) {
                $('#p_color').val(_colorId);
                $.ajax({
                    type: "GET",
                    url: `/Products/GetStorages?productId=${@Model.Id}&colorId=${_colorId}`,
                    success: function (data) {
                        $("#storages").html(data);
                        $('input[name=options-outlined]:first').prop('checked', true);
                        $('[name="storage-options"]').first().click();
                    }
                });
            }
        </script>
    }
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const current = document.getElementById("current");
            const opacity = 0.6;
            const imgs = document.querySelectorAll(".img");
            imgs.forEach(img => {
                img.addEventListener("click", (e) => {
                    imgs.forEach(img => {
                        img.style.opacity = 1;
                    });
                    current.src = e.target.src;
                    e.target.style.opacity = opacity;
                });
            });
            getProductDescription(@Model.Id, 0, 0);
            // thêm sản phẩm vào giỏ hàng
            $('.addToCartBtn').click(function () {
                $.ajax({
                    url: '/Cart/AddToCart',
                    type: 'POST',
                    data: {
                        productId: @Model.Id,
                        colorId: $('#p_color').val(),
                        storageId: $('#p_storage').val(),
                        quantity: 1
                    },
                    success: function (response) {
                        if (response.success) {
                            loadCart();
                            console.log("Thêm sản phẩm thành công!");
                        }
                        else {
                            notyf.warning(response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        notyf.error('Lỗi khi thêm sản phẩm vào giỏ hàng:', error);
                        console.error('Lỗi khi thêm sản phẩm vào giỏ hàng:', error);
                    }
                });
            });
        });
        if (@colors.Count() > 0) {
            $(document).ready(function () {
                $(document).on("change", ".select-color", function () {
                    let colorId = parseInt($(this).val());
                    if (!isNaN(colorId)) {
                        $('#p_color').val(colorId);
                        updateStorages(@Model.Id, colorId);
                    }
                });
                $(document).on("change", ".select-storage", function () {
                    let storageId = parseInt($(this).val());
                    if (!isNaN(storageId)) {
                        $('#p_storage').val(storageId);
                        updatePrice(@Model.Id, $('#p_color').val(), storageId);
                        getProductDescription(@Model.Id, $('#p_color').val(), storageId);
                    }
                });
            });
        }

        function getProductDescription(productId, colorId, storageId) {
            $.ajax({
                type: "GET",
                url: `/Products/GetProductDescription?productId=${@Model.Id}&colorId=${colorId}&storageId=${storageId}`,
                success: function (data) {
                    $("#productDescription").html(data);
                }
            });
        }
        function updatePrice(productId, colorId, storageId) {
            $.ajax({
                type: "GET",
                url: `/Products/GetPrices?productId=${@Model.Id}&colorId=${colorId}&storageId=${storageId}`,
                success: function (data) {
                    $("#productPrice").html(data);
                }
            });
            updateQuantityStatus(productId, colorId, storageId);
        }

        function updateQuantityStatus(productId, colorId, storageId) {
            $.ajax({
                type: "GET",
                url: `/Products/GetQuantityStatus?productId=${@Model.Id}&colorId=${colorId}&storageId=${storageId}`,
                success: function (data) {
                    $("#qtyStatus").html(data);
                }
            });
        }

        function updateStorages(productId, _colorId) {
            $.ajax({
                type: "GET",
                url: `/Products/GetStorages?productId=${@Model.Id}&colorId=${_colorId}`,
                success: function (data) {
                    $("#storages").html(data);
                    $('input[name=options-outlined]:first').prop('checked', true);
                    $('[name="storage-options"]').first().click();
                }
            });
        }
    </script>
}