@using System.Text.Json
@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Dashboard Manager";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayoutOrder.cshtml";
}
<script src="https://code.highcharts.com/highcharts.js"></script>   
<div class="row">
    <div class="col-sm-6 col-lg-3 mb-4">
        <div class="card card-border-shadow primary h-100" style="border-bottom: 5px solid #696cff;">
            <div class="card-body d-grid" style="align-content: space-evenly">
                <div class="d-flex align-items-center mb-2 pb-1 justify-content-between">
                    <div class="avatar me-2">
                        <span class="avatar-initial rounded bg-label primary" style="color: #696cff !important;"><i class="fa-solid fa-cart-shopping"></i></span>
                    </div>
                    <h4 class="ms-1 mb-0">@ViewBag.OrderCount</h4>
                </div>
                <p class="mb-1">Tổng đơn hàng</p>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3 mb-4">
        <div class="card card-border-shadow warning h-100" style="border-bottom: 5px solid #ffab00;">
            <div class="card-body d-grid" style="align-content: space-evenly">
                <div class="d-flex align-items-center mb-2 pb-1 justify-content-between">
                    <div class="avatar me-2">
                        <span class="avatar-initial rounded bg-label warning" style="color: #ffab00 !important;"><i class="fa-solid fa-user"></i></span>
                    </div>
                    <h4 class="ms-1 mb-0">@ViewBag.UserCount</h4>
                </div>
                <p class="mb-1">Tổng khách hàng</p>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3 mb-4">
        <div class="card card-border-shadow danger h-100" style="border-bottom: 5px solid #ff3e1d;">
            <div class="card-body d-grid" style="align-content: space-evenly">
                <div class="d-flex align-items-center mb-2 pb-1 justify-content-between">
                    <div class="avatar me-2">
                        <span class="avatar-initial rounded bg-label danger" style="color: #ff3e1d !important;"><i class="fa-solid fa-check"></i></span>
                    </div>
                    <h4 class="ms-1 mb-0">@ViewBag.ProductCount</h4>
                </div>
                <p class="mb-1">Tổng sản phẩm</p>
            </div>
        </div>
    </div>
    <div class="col-sm-6 col-lg-3 mb-4">
        <div class="card card-border-shadow info h-100" style="border-bottom: 5px solid #03c3ec;">
            <div class="card-body d-grid" style="align-content: space-evenly">
                <div class="d-flex align-items-center mb-2 pb-1 justify-content-between">
                    <div class="avatar me-2">
                        <span class="avatar-initial rounded bg-label info" style="color: #03c3ec !important;"><i class="fa-solid fa-dollar-sign"></i></span>
                    </div>
                    <h4 class="ms-1 mb-0">@($"{ViewBag.OrderTotal:#,##0}đ")</h4>
                </div>
                <p class="mb-1">Doanh thu</p>
            </div>
        </div>
    </div>
</div>

<div id="orderChart" style="width:100%; height:400px;"></div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var chartData = @Html.Raw(JsonSerializer.Serialize(Model));

            var categories = chartData.map(d => `${d.Month}/${d.Year}`);
            var orderCounts = chartData.map(d => d.OrderCount);

            var seriesData = chartData.reduce((acc, data) => {
                data.CategoryStats.forEach(catStat => {
                    if (!acc[catStat.CategoryName]) {
                        acc[catStat.CategoryName] = [];
                    }
                    acc[catStat.CategoryName].push(catStat.QuantitySold);
                });
                return acc;
            }, {});

            var series = Object.keys(seriesData).map(category => ({
                name: category,
                data: seriesData[category]
            }));

            Highcharts.chart('orderChart', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Thống kê đơn hàng với loại sản phẩm bán chạy'
                },
                xAxis: {
                    categories: categories,
                    crosshair: true
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Số đơn hàng / Số lượng bán ra'
                    }
                },
                tooltip: {
                    headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                    pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                        '<td style="padding:0"><b>{point.y} items</b></td></tr>',
                    footerFormat: '</table>',
                    shared: true,
                    useHTML: true
                },
                plotOptions: {
                    column: {
                        pointPadding: 0.2,
                        borderWidth: 0
                    }
                },
                series: series
            });
        });
    </script>
}
<style>
    .card-body {
        font-size: 20px;
    }

    .card-border-shadow {
        box-shadow: 0px 0px 10px rgb(101 109 118 / 45%);
    }

    .bg-label {
        background-color: #e7e7ff !important;
    }

    .avatar {
        position: relative;
        width: 2.375rem;
        height: 2.375rem;
        cursor: pointer;
    }

    .avatar .avatar-initial {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        text-transform: uppercase;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #fff;
        background-color: #8592a3;
        font-weight: 500;
    }
</style>